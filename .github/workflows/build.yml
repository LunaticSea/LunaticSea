name: Nightly build

on:
  push:
    branches: ['master']

env:
  GITHUB_BUILD: true
  NIGHTLY_REPO: https://github.com/LunaticSea/nightly
  REPO: https://github.com/LunaticSea/LunaticSea

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.PERSONAL }}

      - name: Install dev tools
        run: sudo apt-get install -y curl

      - name: Install luvit
        run: curl -L https://github.com/luvit/lit/raw/master/get-lit.sh | sh

      - name: Install dependencies
        run: ./lit install

      - name: Build bot
        run: ./luvit make

      - name: Push LunaticSea binaries to artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'lunatic-sea-linux-amd64'
          path: build/

  win-build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.PERSONAL }}

      - name: Install luvit
        shell: pwsh
        run: PowerShell -NoProfile -ExecutionPolicy unrestricted -Command "[Net.ServicePointManager]::SecurityProtocol = 'Tls12'; iex ((new-object net.webclient).DownloadString('https://github.com/luvit/lit/raw/master/get-lit.ps1'))"

      - name: Install dependencies
        run: ./lit install

      - name: Build bot
        run: ./luvit make

      - name: Push LunaticSea binaries to artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'lunatic-sea-win-amd64'
          path: build/

  publish:
    name: Upload to prerelease
    needs: [win-build, linux-build]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Declare some variables
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"

      - name: Declare file variables
        shell: bash
        run: |
          echo "linux_file_name=lunatic-sea-linux-amd64-${{ env.branch }}-${{ env.sha_short }}.bin" >> "$GITHUB_ENV"
          echo "win_file_name=lunatic-sea-win-amd64-${{ env.branch }}-${{ env.sha_short }}.exe" >> "$GITHUB_ENV"

      - uses: actions/download-artifact@v4

      - name: Rename linux binaries
        run: mv ./lunatic-sea-linux-amd64/LunaticSea ./${{ env.linux_file_name }}

      - name: Rename win binaries
        run: mv ./lunatic-sea-win-amd64/LunaticSea.exe ./${{ env.win_file_name }}

      - name: Create release
        run: gh release create $NIGHTLY_TAG -R ${{ env.NIGHTLY_REPO }} --latest=true --notes "$RELEASE_NOTE"
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL }}
          RELEASE_NOTE: This commit is from [${{ env.sha_short }}](${{ env.REPO }}/tree/${{ github.sha }}) in [LunaticSea/LunaticSea](${{ env.REPO }}). Change logs in [${{ env.sha_short }}](${{ env.REPO }}/commit/${{ github.sha }}) commit
          NIGHTLY_TAG: ${{ env.sha_short }}

      - name: Upload linux binaries to release
        run: gh release upload $NIGHTLY_TAG ./${{ env.linux_file_name }} --clobber -R ${{ env.NIGHTLY_REPO }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL }}
          NIGHTLY_TAG: ${{ env.sha_short }}

      - name: Upload win binaries to release
        run: gh release upload $NIGHTLY_TAG ./${{ env.win_file_name }} --clobber -R ${{ env.NIGHTLY_REPO }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL }}
          NIGHTLY_TAG: ${{ env.sha_short }}
